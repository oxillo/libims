language: c++
compiler: gcc
sudo: true
cache: ccache
env:
  global:

matrix:
  include:
  # fully specify builds, include can't dynamically expand matrix entries
  # relative order of sudo and env is important so that addons: is recognized

  - os: linux
    dist: trusty
    sudo: required
    env: 
      TARGET="linux64"
      WORDSIZE=i686
      CONFIGURATION=Debug
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-4.9
          - g++-4.9
          - gdb

  # - os: linux
  #   dist: trusty
  #   sudo: required
  #   env: TARGET="linux64" OPT="qbs"
  #   cache:
  #     directories:
  #       - linuxbrew
  #     timeout: 1800
  #   addons:
  #     apt:
  #       sources:
  #         - ubuntu-toolchain-r-test
  #       packages:
  #         - gcc-4.9
  #         - g++-4.9
  #         - gdb


  - os: linux
    sudo: required
    dist: trusty
    env: 
      TARGET="linuxarmv6l"
      WORDSIZE=i686
      CONFIGURATION=Debug


  - os: linux
    sudo: required
    dist: trusty
    env: TARGET="linuxarmv7l"
    cache:
      directories:
        - ~/.ccache
        #- ~/rpi2_toolchain
        # - ~/firmware-master
        #- ~/archlinux


  - os: linux
    sudo: required
    dist: trusty
    env: TARGET="emscripten"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - libstdc++6


#  - os: osx
#    osx_image: xcode9.4
#    compiler: clang
#    env: TARGET="osx" OPT="makefiles"


  # Exclude the default build that would otherwise be generated
  # see https://github.com/travis-ci/travis-ci/issues/1228
  exclude:
    - compiler: gcc

before_install:
  - sudo apt-get install libxml2 -y

install:
  - export PRJ_PATH=`pwd`
  - export BUILD_PATH=`pwd`/build/Linux/x86
  - export INSTALL_PATH=`pwd`/install
  #- if [ "$TARGET" == "linux64" ]; then
  #      scripts/linux/download_libs.sh -a 64gcc4;
  #  elif [ "$TARGET" == "linuxarmv6l" ]; then
  #  fi


script:
  - mkdir -p $BUILD_PATH && cd $BUILD_PATH && cmake $PRJ_PATH -G\"Unix Makefiles\" 
      -DCMAKE_BUILD_TYPE=${CONFIGURATION}
      -DCMAKE_INSTALL_PREFIX=${INSTALL_PATH} 
      -DWORDSIZE=${WORDSIZE}
      -DENABLE_DOC=0 
      -DENABLE_TEST=0
      -DENABLE_INSTRUMENTATION=0 "
  - cmake --build $BUILD_PATH --target package --config ${CONFIGURATION}

git:
  depth: 10
